-- ADICIONANDO DADOS:
db.genero.insertMany([{_id: 1, nome: 'Ação', popularidade: 'Alta'},
{_id: 2, nome: 'Comédia', popularidade: 'Alta'},
{_id: 3, nome: 'Romance', popularidade: 'Média'},
{_id: 4, nome: 'Drama', popularidade: 'Alta'},])

db.diretor.insertMany([{_id: 1, nome: 'Steven Spielberg', nacionalidade: 'Americana', data_nascimento: '29/08/1968'},
{_id: 2, nome: 'Alan Taylor', nacionalidade: 'Americana', data_nascimento: '29/10/1965'},
{_id: 3, nome: 'Tarantino', nacionalidade: 'Americana', data_nascimento: '12/09/1972'},
{_id: 4, nome: 'Gary Ross', nacionalidade: 'Americana', data_nascimento: '03/11/1956'},
{_id: 5, nome: 'Lisa Joy', nacionalidade: 'Americana', data_nascimento: '18/05/1982'},
{_id: 6, nome: 'Walcyr Carrasco', nacionalidade: 'Brasileira', data_nascimento: '02/12/1951'},
{_id: 7, nome: 'Glória Perez', nacionalidade: 'Brasileira', data_nascimento: '25/09/1948'},])

-- ignorando herança já que é não relacional
db.titulo.insertMany([{_id: 1, data: '28/11/2000', nome: 'E.T.: O Extraterrestre', classificacao: 'Para maiores de 10 anos', avaliacao: 10, id_genero: 4, id_diretor: 1, duracao: 123},
{_id: 2, data: '07/05/2012', nome: 'Game Of Thrones', classificacao: 'Para maiores de 16 anos', avaliacao: 10, id_genero: 1, id_diretor: 2, qtd_temporadas: 8},
{_id: 3, data: '16/04/1997', nome: 'Kill Bill', classificacao: 'Para maiores de 16 anos', avaliacao: 9, id_genero: 1, id_diretor: 3, duracao: 123},
{_id: 4, data: '10/11/2014', nome: 'Jogos Vorazes', classificacao: 'Para maiores de 10 anos', avaliacao: 8, id_genero: 3, id_diretor: 4, duracao: 90},
{_id: 5, data: '10/11/2014', nome: 'Westworld', classificacao: 'Para maiores de 14 anos', avaliacao: 9, id_genero: 1, id_diretor: 5, qtd_temporadas: 2},])

db.episodios.insertMany([{_id: 1, id_titulo: 2, numero_episodio: 1, duracao: 45, nome: 'Winter Is Coming'},
{_id: 2, id_titulo: 2, numero_episodio: 2, duracao: 47, nome: 'The Kings Road'},
{_id: 3, id_titulo: 2, numero_episodio: 3, duracao: 50, nome: 'Lord Snow'},
{_id: 4, id_titulo: 2, numero_episodio: 4, duracao: 58, nome: 'Cripples, Bastards, and Broken Things'},
{_id: 5, id_titulo: 5, numero_episodio: 1, duracao: 55, nome: 'The Original'},
{_id: 6, id_titulo: 5, numero_episodio: 2, duracao: 55, nome: 'Chestnut'},
{_id: 7, id_titulo: 5, numero_episodio: 3, duracao: 55, nome: 'The Stray'},
{_id: 8, titulo_id: 5, numero_episodio: 4, duracao: 55, nome: 'Dissonance Theory'},])

db.cartao.insertMany([{_id: 1, numero: 6661, codigo_seguranca: 111, bandeira: 'MasterCard'},
{_id: 2, numero: 6662, codigo_seguranca: 112, bandeira: 'MasterCard'},
{_id: 3, numero: 6663, codigo_seguranca: 113, bandeira: 'Visa'}])

db.usuario.insertMany([{_id: 1, email: 'user1@gmail.com', data_nascimento: '20/04/1995', nome: 'João das Neves', id_cartao: 6661},
{_id: 2, email: 'user2@gmail.com', data_nascimento: '23/08/1997', nome: 'Eduardo Forte', email_adminstrador: 'user1@gmail.com', id_cartao: 6662},
{_id: 3, email: 'user3@gmail.com', data_nascimento: '15/09/1999', nome: 'Sabrina Spellman', id_cartao: 6663},])

-- CONSULTAS:
1. Uma consulta de atualização utilizando o valor prévio do campo
db.episodios.update(
    {nome: {$eq: 'The Kings Road'}},
    {  $inc: {duracao: 5} }
)


2. Uma consulta de atualização utilizando ReplaceOne
db.genero.replaceOne(
      { nome: "Romance" },
      { nome: "Romance", popularidade: "Baixa" }
)


3. Uma consulta para remover ou renomear um campo do documento
db.episodios.update(
    { _id: 8 },
    {
        $rename: {
            'titulo_id': 'id_titulo'
        }
    }
)


4. Uma consulta utilizando busca em string
6. Uma consulta com projeção
db.episodios.find({nome: {$regex: /^the/, $options: 'i'}}, {_id: 0, nome: 1})


5. Uma consulta utilizando operadores de comparação
8. Uma consulta utilizando ordenação
13.Uma consulta de agregação
14.Uma junção de tabela com unwind
db.episodios.aggregate([
    {
        $lookup: {
            from: "titulo",
            localField: "id_titulo",
            foreignField: "_id",
            as: "titulo"
        },
    },
    {
        $unwind: {
            path: "$titulo"
        }
    },
    {
        $match: {
            "titulo.nome": {$eq: "Westworld"}
        }
    },
    {
        $sort: {
            nome: 1
        }
    },
    {
        $project: {
            _id: 0,
            "titulo.nome": 1,
            nome: 1
        }
    }
])


7. Uma consulta limitando a quantidade de documentos retornados
db.diretor.find().limit(3)


9. Uma consulta utilizando operadores lógicos
db.titulo.find({$and:[{duracao: {$exists: true}}, {duracao: {$gte: 100}}]}, {_id: 0, nome: 1})


10. Uma consulta com o operador $exists
db.titulo.find({qtd_temporadas: {$exists: true}}, {_id: 0, nome: 1})


11. Uma consulta com o operador $type
db.usuario.find({ nome: { $type: "string" } }, {_id: 0, email: 1})


12. Uma consulta utilizando mapReduce
db.diretor.mapReduce(
    function() { emit(this.nacionalidade, this.nome);},
    function(key, value) {return value.length},
    {
        out: 'diretores_brasileiros'
    }
)


15. 